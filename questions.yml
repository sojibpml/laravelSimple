1.Service Container
Laravel ‡¶è Service Container basically ‡¶è‡¶ï‡¶ü‡¶æ Dependency Injection system‡•§ ‡¶è‡¶ü‡¶æ object ‡¶¨‡¶æ‡¶®‡¶æ‡¶®‡ßã ‡¶Ü‡¶∞ dependency resolve ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶ï‡¶∞‡ßá‡•§
‡¶Ø‡ßá‡¶Æ‡¶®, ‡¶Ø‡¶¶‡¶ø ‡¶ï‡ßã‡¶®‡ßã controller ‡¶è ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶æ class ‡¶¶‡¶∞‡¶ï‡¶æ‡¶∞ ‡¶π‡ßü, ‡¶∏‡ßá‡¶ü‡¶æ container automatically resolve ‡¶ï‡¶∞‡ßá ‡¶¶‡ßá‡ßü ‚Äî ‡¶Ü‡¶Æ‡¶æ‡¶ï‡ßá manually new ‡¶ï‡¶∞‡¶§‡ßá ‡¶π‡ßü ‡¶®‡¶æ‡•§"

2.Service Provider
Service Provider ‡¶π‡¶ö‡ßç‡¶õ‡ßá class ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶Ü‡¶Æ‡¶æ‡¶¶‡ßá‡¶∞ services/container bindings define ‡¶ï‡¶∞‡¶ø‡•§
Laravel boot ‡¶π‡¶ì‡ßü‡¶æ‡¶∞ ‡¶∏‡¶Æ‡ßü Service Provider run ‡¶π‡ßü ‡¶è‡¶¨‡¶Ç container ‡¶è services register ‡¶ï‡¶∞‡ßá‡•§"


3.Dependency Injection
Dependency Injection ‡¶π‡¶≤‡ßã class ‡¶è‡¶∞ dependency (object) ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶•‡ßá‡¶ï‡ßá inject ‡¶ï‡¶∞‡¶æ‡•§ ‡¶è‡¶§‡ßá ‡¶ï‡ßã‡¶° loosely coupled ‡¶π‡ßü‡•§ Laravel ‡¶è‡¶∞ Service Container ‡¶è‡¶ü‡¶æ handle ‡¶ï‡¶∞‡ßá‡•§


4.Repository Pattern
Repository Pattern ‡¶π‡¶≤‡ßã design pattern ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá database logic ‡¶Ü‡¶≤‡¶æ‡¶¶‡¶æ repository class ‡¶è ‡¶∞‡¶æ‡¶ñ‡¶æ ‡¶π‡ßü‡•§ Controller ‡¶∂‡ßÅ‡¶ß‡ßÅ repository ‡¶ï‡ßá call ‡¶ï‡¶∞‡ßá‡•§ ‡¶è‡¶§‡ßá separation of
concerns, testability, ‡¶è‡¶¨‡¶Ç maintainability ‡¶¨‡¶æ‡ßú‡ßá‡•§

5.Authentication ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶≤‡ßã ‡¶á‡¶â‡¶ú‡¶æ‡¶∞‡¶ï‡ßá ‡¶ö‡ßá‡¶®‡¶æ / verify ‡¶ï‡¶∞‡¶æ‡•§ ‡¶Ø‡ßá‡¶Æ‡¶® ‚Äî User ‡¶ï‡ßá login ‡¶ï‡¶∞‡¶§‡ßá ‡¶¶‡ßá‡¶ì‡ßü‡¶æ, ‡¶§‡¶æ‡¶∞ email/password ‡¶∏‡¶†‡¶ø‡¶ï ‡¶ï‡¶ø‡¶®‡¶æ ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶æ‡•§


=================================================================================
Callback Function ‡¶ï‡ßÄ?

Callback function ‡¶π‡¶≤‡ßã ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®, ‡¶Ø‡¶æ‡¶ï‡ßá ‡¶Ö‡¶®‡ßç‡¶Ø ‡¶è‡¶ï‡¶ü‡¶ø ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá‡¶∞ ‡¶Ü‡¶∞‡ßç‡¶ó‡ßÅ‡¶Æ‡ßá‡¶®‡ßç‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡ßã ‡¶π‡¶Ø‡¶º, ‡¶è‡¶¨‡¶Ç ‡¶™‡¶∞‡ßá ‡¶∏‡ßá‡¶á ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡ßá‡¶∞ ‡¶≠‡¶ø‡¶§‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡ßü‡ßã‡¶ú‡¶®‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü‡•§

Method Chaining ‡¶ï‡ßÄ?

Method Chaining ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶ü‡¶ø ‡¶™‡ßç‡¶∞‡¶Ø‡ßÅ‡¶ï‡ßç‡¶§‡¶ø ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡ßá‡¶∞ ‡¶™‡¶∞ ‡¶è‡¶ï method ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü ‡¶è‡¶ï‡¶á object ‡¶è‡¶∞ ‡¶â‡¶™‡¶∞, ‡¶è‡¶¨‡¶Ç ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø method object ‡¶®‡¶ø‡¶ú‡ßá‡¶á return ‡¶ï‡¶∞‡ßá,
‡¶´‡¶≤‡ßá ‡¶Ü‡¶Æ‡¶∞‡¶æ ‡¶è‡¶ï ‡¶≤‡¶æ‡¶á‡¶®‡ßá ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï method ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡¶§‡ßá ‡¶™‡¶æ‡¶∞‡¶ø‡•§


static ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶ü‡¶æ keyword, ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶¶‡¶ø‡ßü‡ßá class property ‡¶¨‡¶æ method ‡¶è‡¶Æ‡¶®‡¶≠‡¶æ‡¶¨‡ßá declare ‡¶ï‡¶∞‡¶æ ‡¶π‡ßü ‡¶Ø‡ßá‡¶®:
object ‡¶§‡ßà‡¶∞‡¶ø ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá‡¶á class ‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

122..Polymorphic Relationship ‡¶ï‡¶ø?

Polymorphic Relationship ‡¶π‡¶≤‡ßã ‡¶è‡¶Æ‡¶® ‡¶è‡¶ï‡¶ü‡¶ø Eloquent relationship ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡¶á ‡¶ü‡ßá‡¶¨‡¶ø‡¶≤‡ßá‡¶∞ ‡¶´‡¶ø‡¶≤‡ßç‡¶° ‡¶¶‡¶ø‡ßü‡ßá ‡¶¨‡¶ø‡¶≠‡¶ø‡¶®‡ßç‡¶® ‡¶Æ‡¶°‡ßá‡¶≤‡ßá‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá ‡¶≤‡¶ø‡¶ô‡ßç‡¶ï ‡¶ï‡¶∞‡¶æ ‡¶Ø‡¶æ‡ßü‡•§

Database Transaction ‡¶ï‡ßÄ?
Database Transaction ‡¶Æ‡¶æ‡¶®‡ßá ‡¶π‡¶≤‡ßã ‡¶è‡¶ï‡¶æ‡¶ß‡¶ø‡¶ï database operation (insert, update, delete ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø) ‡¶è‡¶ï‡¶∏‡¶æ‡¶•‡ßá execute ‡¶π‡¶¨‡ßá ‡¶¨‡¶æ ‡¶è‡¶ï‡¶ü‡¶æ‡¶ì ‡¶π‡¶¨‡ßá ‡¶®‡¶æ‡•§


=============================================================================================================================

1. Observer ‡¶ï‡¶ø ‡¶ï‡¶æ‡¶ú‡ßá ‡¶≤‡¶æ‡¶ó‡ßá?
üëâ Model event handle ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø observer ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶π‡ßü‡•§ ‡¶Ø‡ßá‡¶Æ‡¶® creating, created, updating, deleted ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø‡•§